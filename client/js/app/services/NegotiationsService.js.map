{"version":3,"sources":["../../app-es6/services/NegotiationsService.js"],"names":["NegotiationsService","_httpService","HttpService","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","JSON","parse","responseText","map","negotiation","Negotiation","Date","data","quantidade","valor","console","log","send","all","getNegotiationsWeek","getNegotiationsLastWeek","getNegotiationsDelayedWeek","then","catch","err","ConnectionFactory","getConnection","connection","NegotiationDao","dao","add","Error","listNegotiations","deleteAllNegotiations","list","getAllNegotiations","negotiations","filter","some","existsNegotiation","stringify"],"mappings":"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","file":"NegotiationsService.js","sourcesContent":["class NegotiationsService {\n  constructor() {\n    this._httpService = new HttpService();\n  }\n\n  getNegotiationsWeek() {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", \"negociacoes/semana\");\n\n      // funcão vai ser chamada toda vez que o estado do xhr mudar\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState == 4 && xhr.status == 200) {\n          resolve(\n            JSON.parse(xhr.responseText).map(\n              (negotiation) =>\n                new Negotiation(\n                  new Date(negotiation.data),\n                  negotiation.quantidade,\n                  negotiation.valor\n                )\n            )\n          );\n        } else if (xhr.readyState == 4 && xhr.status == 400) {\n          console.log(xhr.responseText);\n          reject(\"Não foi possível importar as negociações\");\n        }\n      };\n\n      xhr.send();\n    });\n  }\n\n  getNegotiationsLastWeek() {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.open(\"GET\", \"negociacoes/anterior\");\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState == 4 && xhr.status == 200) {\n          resolve(\n            JSON.parse(xhr.responseText).map(\n              (negotiation) =>\n                new Negotiation(\n                  new Date(negotiation.data),\n                  negotiation.quantidade,\n                  negotiation.valor\n                )\n            )\n          );\n        } else if (xhr.readyState == 4 && xhr.status == 400) {\n          reject(\"Não foi possível obter as negociações da semana retrasada\");\n        }\n      };\n\n      xhr.send();\n    });\n  }\n\n  getNegotiationsDelayedWeek() {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", \"negociacoes/retrasada\");\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState == 4 && xhr.status == 200) {\n          resolve(\n            JSON.parse(xhr.responseText).map(\n              (negotiation) =>\n                new Negotiation(\n                  new Date(negotiation.data),\n                  negotiation.quantidade,\n                  negotiation.valor\n                )\n            )\n          );\n        } else if (xhr.readyState == 4 && xhr.status == 400) {\n          reject(\"Não foi possível obter as negociações da semana retrasada\");\n        }\n      };\n\n      xhr.send();\n    });\n  }\n\n  getAllNegotiations() {\n    return Promise.all([\n      this.getNegotiationsWeek(),\n      this.getNegotiationsLastWeek(),\n      this.getNegotiationsDelayedWeek(),\n    ])\n      .then()\n      .catch((err) => err);\n  }\n\n  add(negotiation) {\n    return ConnectionFactory.getConnection()\n      .then((connection) => new NegotiationDao(connection))\n      .then((dao) => dao.add(negotiation))\n      .then(() => \"Negociação adicionada com sucesso\")\n      .catch(() => {\n        throw new Error(\"Não foi possível adicionar a negociação\");\n      });\n  }\n\n  listAll() {\n    return ConnectionFactory.getConnection()\n      .then((connection) => new NegotiationDao(connection))\n      .then((dao) => dao.listNegotiations())\n      .catch(() => {\n        throw new Error(\"Não foi possível listar as negociações\");\n      });\n  }\n\n  delete() {\n    return ConnectionFactory.getConnection()\n      .then((connection) => new NegotiationDao(connection))\n      .then((dao) => dao.deleteAllNegotiations())\n      .catch(() => {\n        throw new Error(\"Não foi possível apagar as negociações\");\n      });\n  }\n\n  import(list) {\n    return this.getAllNegotiations()\n      .then((negotiations) =>\n        negotiations.filter(\n          (negotiations) =>\n            !list.some(\n              (existsNegotiation) =>\n                JSON.stringify(existsNegotiation) ==\n                JSON.stringify(negotiations)\n            )\n        )\n      )\n      .catch(() => \"Não foi possível importar as negociações\");\n  }\n}\n"]}