{"version":3,"sources":["../../app-es6/dao/NegotiationDao.js"],"names":["NegotiationDao","connection","_connection","_store","negotiation","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","event","onerror","console","log","target","error","cursor","openCursor","negotiations","pointer","result","data","value","push","Negotiation","Date","_data","_quantity","_value","continue","clear"],"mappings":";;;;;;IAAMA,c;AACJ,0BAAYC,UAAZ,EAAwB;AAAA;;AACtB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,MAAL,GAAc,cAAd;AACD;;;;wBAEGC,W,EAAa;AAAA;;AACf,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAMC,UAAU,MAAKN,WAAL,CACbO,WADa,CACD,CAAC,MAAKN,MAAN,CADC,EACc,WADd,EAEbO,WAFa,CAED,MAAKP,MAFJ,EAGbQ,GAHa,CAGTP,WAHS,CAAhB;;AAKAI,gBAAQI,SAAR,GAAoB,UAACC,KAAD,EAAW;AAC7BP;AACD,SAFD;;AAIAE,gBAAQM,OAAR,GAAkB,UAACD,KAAD,EAAW;AAC3BE,kBAAQC,GAAR,CAAYH,MAAMI,MAAN,CAAaC,KAAzB;AACAX,iBAAO,yCAAP;AACD,SAHD;AAID,OAdM,CAAP;AAeD;;;uCAEkB;AAAA;;AACjB,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAMY,SAAS,OAAKjB,WAAL,CACZO,WADY,CACA,CAAC,OAAKN,MAAN,CADA,EACe,UADf,EAEZO,WAFY,CAEA,OAAKP,MAFL,EAGZiB,UAHY,EAAf;;AAKA,YAAMC,eAAe,EAArB;;AAEAF,eAAOP,SAAP,GAAmB,UAACC,KAAD,EAAW;AAC5B,cAAIS,UAAUT,MAAMI,MAAN,CAAaM,MAA3B;;AAEA,cAAID,OAAJ,EAAa;AACX,gBAAME,OAAOF,QAAQG,KAArB;;AAEAJ,yBAAaK,IAAb,CACE,IAAIC,WAAJ,CAAgB,IAAIC,IAAJ,CAASJ,KAAKK,KAAd,CAAhB,EAAsCL,KAAKM,SAA3C,EAAsDN,KAAKO,MAA3D,CADF;;AAIAT,oBAAQU,QAAR;AACD,WARD,MAQO;AACL1B,oBAAQe,YAAR;AACD;AACF,SAdD;;AAgBAF,eAAOL,OAAP,GAAiB,UAACD,KAAD,EAAW;AAC1BE,kBAAQC,GAAR,CAAYH,MAAMI,MAAN,CAAaC,KAAzB;AACAX,iBAAO,wCAAP;AACD,SAHD;AAID,OA5BM,CAAP;AA6BD;;;4CAEuB;AAAA;;AACtB,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAMC,UAAU,OAAKN,WAAL,CACbO,WADa,CACD,CAAC,OAAKN,MAAN,CADC,EACc,WADd,EAEbO,WAFa,CAED,OAAKP,MAFJ,EAGb8B,KAHa,EAAhB;;AAKAzB,gBAAQI,SAAR,GAAoB,UAACC,KAAD;AAAA,iBAClBP,QAAQ,mCAAR,CADkB;AAAA,SAApB;AAEAE,gBAAQM,OAAR,GAAkB,UAACD,KAAD,EAAW;AAC3BE,kBAAQC,GAAR,CAAYH,MAAMI,MAAN,CAAaC,KAAzB;AACAX,iBAAO,wCAAP;AACD,SAHD;AAID,OAZM,CAAP;AAaD","file":"NegotiationDao.js","sourcesContent":["class NegotiationDao {\n  constructor(connection) {\n    this._connection = connection;\n    this._store = \"negotiations\";\n  }\n\n  add(negotiation) {\n    return new Promise((resolve, reject) => {\n      const request = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .add(negotiation);\n\n      request.onsuccess = (event) => {\n        resolve();\n      };\n\n      request.onerror = (event) => {\n        console.log(event.target.error);\n        reject(\"Não foi possível adicionar a negociação\");\n      };\n    });\n  }\n\n  listNegotiations() {\n    return new Promise((resolve, reject) => {\n      const cursor = this._connection\n        .transaction([this._store], \"readonly\")\n        .objectStore(this._store)\n        .openCursor();\n\n      const negotiations = [];\n\n      cursor.onsuccess = (event) => {\n        let pointer = event.target.result;\n\n        if (pointer) {\n          const data = pointer.value;\n\n          negotiations.push(\n            new Negotiation(new Date(data._data), data._quantity, data._value)\n          );\n\n          pointer.continue();\n        } else {\n          resolve(negotiations);\n        }\n      };\n\n      cursor.onerror = (event) => {\n        console.log(event.target.error);\n        reject(\"Não foi possível listar as negociações\");\n      };\n    });\n  }\n\n  deleteAllNegotiations() {\n    return new Promise((resolve, reject) => {\n      const request = this._connection\n        .transaction([this._store], \"readwrite\")\n        .objectStore(this._store)\n        .clear();\n\n      request.onsuccess = (event) =>\n        resolve(\"Negociações removidas com sucesso\");\n      request.onerror = (event) => {\n        console.log(event.target.error);\n        reject(\"Não foi possível apagar as negociações\");\n      };\n    });\n  }\n}\n"]}